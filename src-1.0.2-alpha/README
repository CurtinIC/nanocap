NanoCap 
Copyright (c) 2013 M. Robinson


Introduction
============

NanoCap provides both libraries and a standalone application for the construction 
of capped nanotubes of arbitrarily chirality and fullerenes of any radius. Structures 
are generated by constructing a set of optimal dual graph topologies which 
are subsequently optimised using a carbon interatomic potential. Combining 
this approach with a GUI featuring 3D rendering capabilities allows for the rapid 
inspection of physically sensible structures which can be used as input for 
molecular simulation. 

Requirements
============

NanoCap as a library with no GUI.
---------------------------------

Only NumPy and SciPy are required

NanoCap + GUI from source
-------------------------

PySide, Qt, VTK+Python


Licenses
========

NanoCap is distributed under the Creative Commons Attribution-NonCommercial 2.5 
License (http://creativecommons.org/licenses/by-nc/2.5/). For a full description 
of this license see docs/LICENSE. 

In addition, if NanoCap is used to produce published work please acknowledge the 
following papers: 

1) Robinson M, Suarez-Martinez I, Marks NA. Generalized method for constructing 
the atomic coordinates of nanotube caps. Phys. Rev. B 2013 87(15):155430. 
 
2) Robinson M. NanoCap - A Generator for Capped Carbon Nanotubes and Fullerenes 
XXX 

In the standalone version of NanoCap, the following libraries are bundle but not 
modified: 

NumPy - Version 1.6.2
Scipy - Version 0.11.0
Qt - Version 4.8.5 
PySide - Version 1.1.1 
VTK - Version 5.8 

The distribution licenses associated with each of the above are given in the 'docs' 
folder which is bundled with both the source code and standalone application. 

Each license is compatible with the Creative Commons Attribution-NonCommercial 2.5 
License. 

Releases
========

1.0.2-alpha
-----------

	- Added scaled topology generation. The fullerenes and/or capped nanotubes are scaled
	to give the roughly the correct C-C bond length. Simple optimisation to minimise the 
	residual square difference between oberserved and current bond lengths. 
	
	- Move ring calcuation routines to it's own module and added calls in the fullerene
	and capped nanotube classes
	
	- Added cappednanotube class, which holds nanotube, cap and reflected cap objects. 
	Dual lattice points and carbon atoms are constructed by joining the pointSets 
	together.
	
	- Added volume and surface area calculation for fullerenes. Uses divergence theorem
	and the carbon atom rings. The normal to each ring is used along with the surface area
	to determine the volume. Sphericity is then calculated.  

1.0.1-alpha
-----------

Win32
    - Issue with embedding the vtk window in a qt widget. Mainly due to return
    value of vtk_object.winId() not being compatible with qt_widget.SetWindowInfo()
    winId() return val is platform specific. On windows returns PyCObject, so have to:

        WId = self.winId()

        if type(WId).__name__ == 'PyCObject':
            from ctypes import pythonapi, c_void_p, py_object
        
            pythonapi.PyCObject_AsVoidPtr.restype  = c_void_p
            pythonapi.PyCObject_AsVoidPtr.argtypes = [py_object]
        
            WId = pythonapi.PyCObject_AsVoidPtr(WId)
        
        self._RenderWindow.SetWindowInfo(str(int(WId))) 

    - Had to turn off the rendering multithreading - need to relook at modifying 
    opengl objects between threads. Ensure only done on the gui thread loop.


1.0-alpha
-----------
	- Initial release. Primary development on OS X 10.7. 


